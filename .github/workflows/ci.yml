# This workflow will:
#   * Trigger on pushes to main and on pull requests targeting main.
#   * Set up a Python environment.
#   * Install dependencies using Poetry.
#   * Run your tests (pytest), linter (ruff), and formatter check (black --check).
name: Python CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List files after checkout
      run: ls -F

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12' # Ensure this matches your project's Python version

    - name: Install Poetry with pipx
      run: |
        pip install pipx
        pipx ensurepath
        pipx install poetry

    - name: Install dependencies
      run: |
        poetry lock --no-interaction
        poetry install --no-interaction --no-root --with dev

    - name: Create .env file for tests
      run: echo "ORDO_API_TOKEN=test-token-from-env" > .env
      # CRITICAL: In a real project, avoid hardcoding secrets.
      # Use GitHub Secrets for ORDO_API_TOKEN if tests need a real token.
      # For this example, a dummy token is sufficient as it's for CI.

    - name: Run tests
      run: poetry run pytest tests/

    - name: Run linter (Ruff)
      run: poetry run ruff check src/ordo/

    - name: Run formatter check (Black)
      run: poetry run black --check src/ordo/
